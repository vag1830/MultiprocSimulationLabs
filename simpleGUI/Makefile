#############################################################################
# Makefile for building: simpleGUI
# Generated by qmake (2.01a) (Qt 4.7.4) on: Fri Aug 29 01:04:53 2014
# Project:  simpleGUI.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-32 CONFIG+=debug -o Makefile simpleGUI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m32 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m32 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-32 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -m32
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -L/usr/lib -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		eventhandler.cpp \
		reader.cpp \
		outputwindow.cpp \
		simvalue.cpp \
		simulator.cpp \
		paramwindow.cpp \
		wrighter.cpp \
		helpwindow.cpp \
		test.cpp moc_mainwindow.cpp \
		moc_eventhandler.cpp \
		moc_reader.cpp \
		moc_outputwindow.cpp \
		moc_simvalue.cpp \
		moc_simulator.cpp \
		moc_paramwindow.cpp \
		moc_helpwindow.cpp \
		qrc_assets.cpp
OBJECTS       = main.o \
		mainwindow.o \
		eventhandler.o \
		reader.o \
		outputwindow.o \
		simvalue.o \
		simulator.o \
		paramwindow.o \
		wrighter.o \
		helpwindow.o \
		test.o \
		moc_mainwindow.o \
		moc_eventhandler.o \
		moc_reader.o \
		moc_outputwindow.o \
		moc_simvalue.o \
		moc_simulator.o \
		moc_paramwindow.o \
		moc_helpwindow.o \
		qrc_assets.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		simpleGUI.pro
QMAKE_TARGET  = simpleGUI
DESTDIR       = 
TARGET        = simpleGUI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_outputwindow.h ui_paramwindow.h ui_helpwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: simpleGUI.pro  /usr/share/qt4/mkspecs/linux-g++-32/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 CONFIG+=debug -o Makefile simpleGUI.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 CONFIG+=debug -o Makefile simpleGUI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/simpleGUI1.0.0 || $(MKDIR) .tmp/simpleGUI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/simpleGUI1.0.0/ && $(COPY_FILE) --parents mainwindow.h eventhandler.h reader.h outputwindow.h simvalue.h simulator.h paramwindow.h wrighter.h helpwindow.h test.h .tmp/simpleGUI1.0.0/ && $(COPY_FILE) --parents assets.qrc assets.qrc .tmp/simpleGUI1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp eventhandler.cpp reader.cpp outputwindow.cpp simvalue.cpp simulator.cpp paramwindow.cpp wrighter.cpp helpwindow.cpp test.cpp .tmp/simpleGUI1.0.0/ && $(COPY_FILE) --parents mainwindow.ui outputwindow.ui paramwindow.ui helpwindow.ui .tmp/simpleGUI1.0.0/ && (cd `dirname .tmp/simpleGUI1.0.0` && $(TAR) simpleGUI1.0.0.tar simpleGUI1.0.0 && $(COMPRESS) simpleGUI1.0.0.tar) && $(MOVE) `dirname .tmp/simpleGUI1.0.0`/simpleGUI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/simpleGUI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_eventhandler.cpp moc_reader.cpp moc_outputwindow.cpp moc_simvalue.cpp moc_simulator.cpp moc_paramwindow.cpp moc_helpwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_eventhandler.cpp moc_reader.cpp moc_outputwindow.cpp moc_simvalue.cpp moc_simulator.cpp moc_paramwindow.cpp moc_helpwindow.cpp
moc_mainwindow.cpp: simulator.h \
		simvalue.h \
		eventhandler.h \
		mainwindow.h \
		paramwindow.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_eventhandler.cpp: mainwindow.h \
		simulator.h \
		simvalue.h \
		eventhandler.h \
		paramwindow.h \
		eventhandler.h
	/usr/bin/moc $(DEFINES) $(INCPATH) eventhandler.h -o moc_eventhandler.cpp

moc_reader.cpp: reader.h
	/usr/bin/moc $(DEFINES) $(INCPATH) reader.h -o moc_reader.cpp

moc_outputwindow.cpp: outputwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) outputwindow.h -o moc_outputwindow.cpp

moc_simvalue.cpp: simvalue.h
	/usr/bin/moc $(DEFINES) $(INCPATH) simvalue.h -o moc_simvalue.cpp

moc_simulator.cpp: simvalue.h \
		simulator.h
	/usr/bin/moc $(DEFINES) $(INCPATH) simulator.h -o moc_simulator.cpp

moc_paramwindow.cpp: simulator.h \
		simvalue.h \
		eventhandler.h \
		mainwindow.h \
		paramwindow.h \
		paramwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) paramwindow.h -o moc_paramwindow.cpp

moc_helpwindow.cpp: helpwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) helpwindow.h -o moc_helpwindow.cpp

compiler_rcc_make_all: qrc_assets.cpp qrc_assets.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_assets.cpp qrc_assets.cpp
qrc_assets.cpp: assets.qrc \
		logos/espa.jpg \
		logos/eu.jpg \
		logos/digiGr.jpg
	/usr/bin/rcc -name assets assets.qrc -o qrc_assets.cpp

qrc_assets.cpp: assets.qrc \
		logos/espa.jpg \
		logos/eu.jpg \
		logos/digiGr.jpg
	/usr/bin/rcc -name assets assets.qrc -o qrc_assets.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_outputwindow.h ui_paramwindow.h ui_helpwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_outputwindow.h ui_paramwindow.h ui_helpwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_outputwindow.h: outputwindow.ui
	/usr/bin/uic outputwindow.ui -o ui_outputwindow.h

ui_paramwindow.h: paramwindow.ui
	/usr/bin/uic paramwindow.ui -o ui_paramwindow.h

ui_helpwindow.h: helpwindow.ui
	/usr/bin/uic helpwindow.ui -o ui_helpwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		simulator.h \
		simvalue.h \
		eventhandler.h \
		paramwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		simulator.h \
		simvalue.h \
		eventhandler.h \
		paramwindow.h \
		ui_mainwindow.h \
		reader.h \
		helpwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

eventhandler.o: eventhandler.cpp eventhandler.h \
		mainwindow.h \
		simulator.h \
		simvalue.h \
		paramwindow.h \
		outputwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o eventhandler.o eventhandler.cpp

reader.o: reader.cpp mainwindow.h \
		simulator.h \
		simvalue.h \
		eventhandler.h \
		paramwindow.h \
		ui_mainwindow.h \
		reader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reader.o reader.cpp

outputwindow.o: outputwindow.cpp outputwindow.h \
		ui_outputwindow.h \
		reader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outputwindow.o outputwindow.cpp

simvalue.o: simvalue.cpp simvalue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simvalue.o simvalue.cpp

simulator.o: simulator.cpp simulator.h \
		simvalue.h \
		reader.h \
		eventhandler.h \
		mainwindow.h \
		paramwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulator.o simulator.cpp

paramwindow.o: paramwindow.cpp paramwindow.h \
		simulator.h \
		simvalue.h \
		eventhandler.h \
		mainwindow.h \
		ui_paramwindow.h \
		wrighter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o paramwindow.o paramwindow.cpp

wrighter.o: wrighter.cpp wrighter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wrighter.o wrighter.cpp

helpwindow.o: helpwindow.cpp helpwindow.h \
		ui_helpwindow.h \
		reader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o helpwindow.o helpwindow.cpp

test.o: test.cpp test.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o test.o test.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_eventhandler.o: moc_eventhandler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_eventhandler.o moc_eventhandler.cpp

moc_reader.o: moc_reader.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_reader.o moc_reader.cpp

moc_outputwindow.o: moc_outputwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outputwindow.o moc_outputwindow.cpp

moc_simvalue.o: moc_simvalue.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_simvalue.o moc_simvalue.cpp

moc_simulator.o: moc_simulator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_simulator.o moc_simulator.cpp

moc_paramwindow.o: moc_paramwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_paramwindow.o moc_paramwindow.cpp

moc_helpwindow.o: moc_helpwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_helpwindow.o moc_helpwindow.cpp

qrc_assets.o: qrc_assets.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_assets.o qrc_assets.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

