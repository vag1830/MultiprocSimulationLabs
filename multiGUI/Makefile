#############################################################################
# Makefile for building: multiGUI
# Generated by qmake (2.01a) (Qt 4.7.4) on: Thu Oct 10 01:27:34 2013
# Project:  multiGUI.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile multiGUI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m32 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m32 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-32 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -m32 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -L/usr/lib -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		wrighter.cpp \
		reader.cpp \
		environment.cpp \
		configuration.cpp \
		program.cpp \
		simulation.cpp \
		paramwindow.cpp \
		outputwindow.cpp moc_mainwindow.cpp \
		moc_environment.cpp \
		moc_reader.cpp \
		moc_configuration.cpp \
		moc_program.cpp \
		moc_simulation.cpp \
		moc_paramwindow.cpp \
		moc_outputwindow.cpp \
		qrc_assets.cpp
OBJECTS       = main.o \
		mainwindow.o \
		wrighter.o \
		reader.o \
		environment.o \
		configuration.o \
		program.o \
		simulation.o \
		paramwindow.o \
		outputwindow.o \
		moc_mainwindow.o \
		moc_environment.o \
		moc_reader.o \
		moc_configuration.o \
		moc_program.o \
		moc_simulation.o \
		moc_paramwindow.o \
		moc_outputwindow.o \
		qrc_assets.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		multiGUI.pro
QMAKE_TARGET  = multiGUI
DESTDIR       = 
TARGET        = multiGUI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_paramwindow.h ui_outputwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: multiGUI.pro  /usr/share/qt4/mkspecs/linux-g++-32/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile multiGUI.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 -o Makefile multiGUI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/multiGUI1.0.0 || $(MKDIR) .tmp/multiGUI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/multiGUI1.0.0/ && $(COPY_FILE) --parents mainwindow.h environment.h wrighter.h reader.h parameter.h configuration.h program.h simulation.h paramwindow.h outputwindow.h mainwindow.h .tmp/multiGUI1.0.0/ && $(COPY_FILE) --parents assets.qrc .tmp/multiGUI1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp wrighter.cpp reader.cpp environment.cpp configuration.cpp program.cpp simulation.cpp paramwindow.cpp outputwindow.cpp .tmp/multiGUI1.0.0/ && $(COPY_FILE) --parents mainwindow.ui paramwindow.ui outputwindow.ui .tmp/multiGUI1.0.0/ && (cd `dirname .tmp/multiGUI1.0.0` && $(TAR) multiGUI1.0.0.tar multiGUI1.0.0 && $(COMPRESS) multiGUI1.0.0.tar) && $(MOVE) `dirname .tmp/multiGUI1.0.0`/multiGUI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/multiGUI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_environment.cpp moc_reader.cpp moc_configuration.cpp moc_program.cpp moc_simulation.cpp moc_paramwindow.cpp moc_outputwindow.cpp moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_environment.cpp moc_reader.cpp moc_configuration.cpp moc_program.cpp moc_simulation.cpp moc_paramwindow.cpp moc_outputwindow.cpp moc_mainwindow.cpp
moc_mainwindow.cpp: paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h \
		mainwindow.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_environment.cpp: configuration.h \
		parameter.h \
		reader.h \
		environment.h
	/usr/bin/moc $(DEFINES) $(INCPATH) environment.h -o moc_environment.cpp

moc_reader.cpp: reader.h
	/usr/bin/moc $(DEFINES) $(INCPATH) reader.h -o moc_reader.cpp

moc_configuration.cpp: parameter.h \
		reader.h \
		configuration.h
	/usr/bin/moc $(DEFINES) $(INCPATH) configuration.h -o moc_configuration.cpp

moc_program.cpp: configuration.h \
		parameter.h \
		reader.h \
		program.h
	/usr/bin/moc $(DEFINES) $(INCPATH) program.h -o moc_program.cpp

moc_simulation.cpp: mainwindow.h \
		paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h \
		simulation.h
	/usr/bin/moc $(DEFINES) $(INCPATH) simulation.h -o moc_simulation.cpp

moc_paramwindow.cpp: program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h \
		mainwindow.h \
		paramwindow.h \
		paramwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) paramwindow.h -o moc_paramwindow.cpp

moc_outputwindow.cpp: simulation.h \
		mainwindow.h \
		paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		outputwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) outputwindow.h -o moc_outputwindow.cpp

moc_mainwindow.cpp: paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h \
		mainwindow.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

compiler_rcc_make_all: qrc_assets.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_assets.cpp
qrc_assets.cpp: assets.qrc \
		logos/espa.jpg \
		logos/digiGr.jpg \
		logos/eu.jpg
	/usr/bin/rcc -name assets assets.qrc -o qrc_assets.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_paramwindow.h ui_outputwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_paramwindow.h ui_outputwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_paramwindow.h: paramwindow.ui
	/usr/bin/uic paramwindow.ui -o ui_paramwindow.h

ui_outputwindow.h: outputwindow.ui
	/usr/bin/uic outputwindow.ui -o ui_outputwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

wrighter.o: wrighter.cpp wrighter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wrighter.o wrighter.cpp

reader.o: reader.cpp mainwindow.h \
		paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reader.o reader.cpp

environment.o: environment.cpp environment.h \
		configuration.h \
		parameter.h \
		reader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o environment.o environment.cpp

configuration.o: configuration.cpp tools.cpp \
		configuration.h \
		parameter.h \
		reader.h \
		parameter.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configuration.o configuration.cpp

program.o: program.cpp program.h \
		configuration.h \
		parameter.h \
		reader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o program.o program.cpp

simulation.o: simulation.cpp simulation.h \
		mainwindow.h \
		paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		wrighter.h \
		ui_mainwindow.h \
		outputwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulation.o simulation.cpp

paramwindow.o: paramwindow.cpp paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		simulation.h \
		mainwindow.h \
		ui_paramwindow.h \
		wrighter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o paramwindow.o paramwindow.cpp

outputwindow.o: outputwindow.cpp outputwindow.h \
		simulation.h \
		mainwindow.h \
		paramwindow.h \
		program.h \
		configuration.h \
		parameter.h \
		reader.h \
		environment.h \
		ui_outputwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outputwindow.o outputwindow.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_environment.o: moc_environment.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_environment.o moc_environment.cpp

moc_reader.o: moc_reader.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_reader.o moc_reader.cpp

moc_configuration.o: moc_configuration.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configuration.o moc_configuration.cpp

moc_program.o: moc_program.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_program.o moc_program.cpp

moc_simulation.o: moc_simulation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_simulation.o moc_simulation.cpp

moc_paramwindow.o: moc_paramwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_paramwindow.o moc_paramwindow.cpp

moc_outputwindow.o: moc_outputwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outputwindow.o moc_outputwindow.cpp

qrc_assets.o: qrc_assets.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_assets.o qrc_assets.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

