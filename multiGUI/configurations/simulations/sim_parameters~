/* QS Configuration file */
name	type	value	default-value	desc			group	small-desc	
#-i		#int	#4	#4		#parameter name: -i <br/>type: int <br /> default value: 4<br /><br />Number of instructions to fetch in a cycle.		#Processor parameters	#Number of nodes in system
#-a		#int	#64	#64		#parameter name: -a <br/>type: int <br /> default value: 64<br /><br />Active list size.					#Processor parameters	#Request header size (in bytes)
#-g		#int	#4	#4		#parameter name: -q <br/>type: int <br /> default value: 4<br /><br />Maximum number of instructions to graduate per cycle. If the value 0 is given, then the processor will be able to graduate an unbounded number of instructions per cycle. Defaults to the same value as the instruction fetch width (specified in ``-i'', or 4 if no ``-i'' is given).		#Processor parameters		#Branch predictor type
#-u		#bool	#false	#false		#parameter name: -u <br/>type: bool <br /> default value: false<br /><br />Simulate fast functional units - all ALU and FPU instructions have single cycle latency. This option overrides any latencies specified in the configuration file.																#Processor parameters		#Size of branch prediction table
#-E		#int	#4	#4		#parameter name: -E <br/>type: int <br /> default value: 4<br /><br />Number of instructions to flush per cycle (from the active list) on an exception. If the value of 0 is given, the processor will flush all instructions immediately on an exception. Defaults to the same value as the graduation rate. 								#Processor parameters		#Size of branch prediction table
#-q		#string	#null	#null		#parameter name: -q <br/>type: string <br /> default value: null<br /><br />Many processors include one or more issue windows (corresponding to different sets of functional units) separate from the active list. These issue windows only hold instructions that have not yet issued to the corresponding functional units (or, in the case of memory instructions, instructions that have not completed all of their ordering constraints). Thus, the issue logic only needs to examine instructions in the corresponding windows for outstanding dependences. The ``-q'' option supports a processor that has separate issue windows for memory and non-memory instructions, and stalls further instruction decoding when a new instruction cannot obtain a space in its issue window. The first number specified with this option represents the size of the issue window for non-memory operations. The second number represents the size of the memory unit, and overrides any earlier use of the ``-m'' option below). Note that when ``-q'' is not used, the processor still supports a memory unit, but does not stall if the memory unit is full. This option has not yet been extensively tested. Unused by default. 		#Processor parameters	#small-desc
#-X		#bool	#false	#false		#parameter name: -X <br/>type: bool <br /> default value: false<br /><br />Static scheduling. Supported only with the straightforward implementation of release consistency. The static scheduling supported in RSIM includes register renaming and out-of-order completion. Memory instructions are considered issued once they have been sent to their address generation units; memory fences and structural hazards beyond that point may cause additional delays. This option has not yet been extensively tested. Unused by default.		#Processor parameters	#small-desc
#-m		#int	#32	#32		#parameter name: -m <br/>type: int <br /> default value: 32<br /><br />Maximum number of operations in the processor memory unit, described in Section 3.2.3.		#Memory unit parameters	#small-desc
#-L		#int	#2	#2		#parameter name: -L <br/>type: int <br /> default value: 2<br /><br />Represents the memory ordering constraint for uniprocessor data dependences in the situation of a load past a prior store with an unknown address (as described in Section 3.2.3). The following table specifies the policies supported: <br /><br />Policy number: 0 <br />Stall load until all previous store addresses known (supported only with release consistency) <br /><br />Policy number: 1 <br />Issue load, but do not let other instructions use load value until & all previous store addresses known (supported only with release consistency) <br /><br />Policy number: 2 <br />Issue load and let other instructions use load value even when addresses of previous stores are unknown. & If prior store later discovered to have conflicting address, & cause soft exception.		#Memory unit parameters	#small-desc
#-p		#bool	#false	#false		#parameter name: -p <br/>type: bool <br /> default value: false<br /><br />Memory unit parameters		#Memory unit parameters	#small-desc
#-P		#bool	#false	#false		#parameter name: -P <br/>type: bool <br /> default value: false<br /><br />Same as ``-p'', but brings write prefetches only to L2 cache.		#memory unit parameters	#small-desc
#-J		#bool	#false	#false		#parameter name: -J <br/>type: bool <br /> default value: false<br /><br />All prefetches (software and hardware) go only to L2 cache.		#memory unit parameters	#small-desc
#-K		#bool	#false	#false		#parameter name: -K <br/>type: bool <br /> default value: false<br /><br />Enable speculative load execution for optimized consistency implementations (discussed in Section 3.2.3).		#memory unit parameters	#small-desc
#-N		#bool	#false	#false		#parameter name: -N <br/>type: bool <br /> default value: false<br /><br />Store buffering in SC: allows stores to graduate before completion [4, 17] (useful in SC only; stores graduate before completion in all other models by default; discussed in Section 3.2.3) 		#memory unit parameters	#small-desc
#-6		#bool	#false	#false		#parameter name: -6 <br/>type: bool <br /> default value: false<br /><br />Processor consistency, if RSIM compiled with -DSTORE_ORDERING. RSIM compiled with -DSTORE_ORDERING provides SC by default. 		#memory unit parameters	#small-desc
#-H		#string	#8,8	#8,8		#parameter name: -H <br/>type: int <br /> default value: 8,8<br /><br />Number of MSHRs [10] supported at the L1 and L2 cache, respectively.		#Cache parameters	#small-desc
#-T		#bool	#false	#false		#parameter name: -T <br/>type: bool <br /> default value: false<br /><br />Discriminate prefetching. If a hardware or software prefetch is stalled for resource constraints at the L1 cache (e.g. all MSHRs full), it will be dropped (to make place for later demand accesses that may also be stalled).		#Cache parameters	#small-desc
#-x		#bool	#false	#false		#parameter name: -x <br/>type: bool <br /> default value: false<br /><br />Drop all software prefetches. Useful only for measuring instruction overhead of prefetching.		#Cache parameters	#small-desc
#-k		#bool	#false	#false		#parameter name: -k <br/>type: bool <br /> default value: false<br /><br />Turn off ILP simulation; i.e. simulate a processor with single-issue, static scheduling, and blocking reads. Supported only for RC. 		#Approximate simulation models	#small-desc
#-F		#int	#1	#1		#parameter name: -F <br/>type: int <br /> default value: 1<br /><br />Increase processor clock speed by the factor specified in num.		#Approximate simulation models	#small-desc
#-y		#int	#1	#1		#parameter name: -y <br/>type: int <br /> default value: 1<br /><br />Increase L1 cache access speed by the factor specified in num.		#Approximate simulation models	#small-desc
#-n		#bool	#false	#false		#parameter name: -n <br/>type: bool <br /> default value: false<br /><br />Turn on simulation of private accesses. Currently supported only in single processor mode. It is highly recommended that this option be used if RSIM is used in uniprocessor studies.		#Other architectural configuration parameters	#small-described
#-W		#bool	#true	#true		#parameter name: -W <br/>type: bool <br /> default value: true<br /><br />Addresses in the shared region of the RSIM application address space are normally associated with a specific home node, which provides the directory services for those addresses. If an address being accessed has not been associated with a specific home node using AssociateAddrNode (described in Chapter 5), the default action for RSIM is to print a warning message and associate the cache line using a first-touch policy. If the ``-W'' option is used, no warning message is printed..		#Other architectural configuration parameters	#small-desc


