/* QS Configuration file */
name	type	value	default-value	desc			group	small-desc	
#numnodes	#int	#16	#16		#parameter name: numnodes <br/>type: int <br /> default value: 16<br /><br />The number given to this parameter specifies the number of nodes in the system. Defaults to 16.																					#Over all system parameters	#Number of nodes in system
#reqsz		#int	#16	#16		#parameter name: reqsz <br/>type: int <br /> default value: 16<br /><br />This parameter gives the length of the control header for each packet, ib bytes. The control header includes the requested address, the source node, the destination node, and the command type for the packet. Defaults to 16.					#Over all system parameters	#Request header size (in bytes)
#bpbtype	#list	#2bit,2bitagree,static	#2bit		#parameter name: bpbtype <br/>type: int <br /> default value: 16<br /><br />Type of branch predictor included int e processor. The argument is a string, and is specified as follows: 2bit -> 2-bit history predictor. This is the default. 2bitagree -> 2-bit agree predictor. static -> static branch prediction using compiler hints.	#Processor parameters		#Branch predictor type
#bpbsize	#int	#512	#512		#parameter name: bpbtype <br/>type: int <br /> default value: 16<br /><br />This number specifies the number of the counters in the branch prediction buffer (unused with static branch prediction ). Defaults to 512.																#Processor parameters		#Size of branch prediction table
#shadowmappers	#int	#8	#8		#parameter name: shadowmappers <br/>type: int <br /> default value: 16<br /><br />This number controls the number of the shadow mappers provided for branch prediction. Defaults to 8.																				#Processor parameters		#Number of shadow mappers
#rassize	#int	#4	#4		#parameter name: rassize <br/>type: int <br /> default value: 16<br /><br />The nmber provided here sets the number of entries in the return address stack. 																							#Processor parameters		#Return address stack size
#numalus	#int	#2	#2		#parameter name: numalus <br/>type: int <br /> default value: 16<br /><br />This number specifies the number of ALU functional units in the RSIM processor.																							#Processor parameters		#Number of functional ALUs:
#numfpus	#int	#2	#2		#parameter name: numfpus <br/>type: int <br /> default value: 16<br /><br />This number specifies the number of FPU functional units in the RSIM processor.																							#Processor parameters		#Number of functional FPUs
#numaddrs	#int	#2	#2		#parameter name: numaddrs <br/>type: int <br /> default value: 16<br /><br />This number specifies the number of address generation units in the RSIM processor.																						#Processor parameters		#Number of functional Addr. gen.
#regwindows	#int	#8	#8		#parameter name: regwindows <br/>type: int <br /> default value: 16<br /><br />This number gives the number of register windows in the RSIM processor (one of these is always reserved for the system). Must be a power of 2 between 4 and 32, inclusive.												#Processor parameters		#Number of register windows
#latint		#int	#1	#1		#parameter name: latint <br/>type: int <br /> default value: 16<br /><br />Latency delay for common ALU operations (e.g. add, subtract, move).																								#Processor parameters		#Common ALU operations latency
#repint		#int	#1	#1		#parameter name: repint <br/>type: int <br /> default value: 16<br /><br />Repeat delay for common ALU operations (e.g. add, subtract, move).																									#Processor parameters		#Common ALU operations repeat delay
#latmul		#int	#3	#3		#parameter name: latmul <br/>type: int <br /> default value: 16<br /><br />Latency delay for integer multiply operations. 																											#Processor parameters		#Integer multiply latency
#repmul		#int	#1	#1		#parameter name: repmul <br/>type: int <br /> default value: 16<br /><br />Repeat delay for integer multiply operations.																											#Processor parameters		#Integer multiply repeat delay
#latdiv		#int	#9	#9		#parameter name: latdiv <br/>type: int <br /> default value: 16<br /><br />Latency delay for integer divide operations.																											#Processor parameters		#Integer divide latency
#repdiv		#int	#1	#1		#parameter name: repdiv <br/>type: int <br /> default value: 16<br /><br />Repeat delay for integer divide operations.																											#Processor parameters		#Integer divide repeat delay
#latshift	#int	#1	#1		#parameter name: latshift <br/>type: int <br /> default value: 16<br /><br />Latency delay for integer shift operations.																											#Processor parameters		#Integer shift latency
#repshift	#int	#1	#1		#parameter name: repshift <br/>type: int <br /> default value: 16<br /><br />Repeat delay for integer shift operations.																												#Processor parameters		#Integer shift repeat delay
#latflt		#int	#3	#3		#parameter name: latflt <br/>type: int <br /> default value: 16<br /><br />Latency delay for common FP operations. (e.g. add subtract, multiply)																								#Processor parameters		#Common FPU operations latency
#repflt		#int	#1	#1		#parameter name: repflt <br/>type: int <br /> default value: 16<br /><br />Repeat delay for common FP operations. (e.g. add subtract, multiply)																								#Processor parameters		#Common FPU operations repeat delay
#latfmov	#int	#1	#1		#parameter name: latfmov <br/>type: int <br /> default value: 16<br /><br />Latency delay for simple FP operations (e.g. move. negate, absolute value).																							#Processor parameters		#FPU move/abs/neg latency
#repfmov	#int	#1	#1		#parameter name: repfmov <br/>type: int <br /> default value: 16<br /><br />Repeat delay for simple FP operations (e.g. move. negate, absolute value)																								#Processor parameters		#FPU move/abs/neg repeat delay
#latfconv	#int	#4	#4		#parameter name: letfconv <br/>type: int <br /> default value: 16<br /><br />Latency delay for FP conversions (e.g. int-fp, fp-int, float-double).																								#Processor parameters		#FPU conversions latency
#repfconv	#int	#2	#2		#parameter name: repfconv <br/>type: int <br /> default value: 16<br /><br />Repeat delay for FP conversions (e.g. int-fp, fp-int, float-double).																								#Processor parameters		#FPU conversions repeat delay
#latfdiv	#int	#10	#10		#parameter name: latfdiv <br/>type: int <br /> default value: 16<br /><br />Latency delay for FP devide.																													#Processor parameters		#FPU divide latency	
#repfdiv	#int	#6	#6		#parameter name: repfdiv <br/>type: int <br /> default value: 16<br /><br />Repeat delay for FP devide.																													#Processor parameters		#FPU divide repeat delay
#latfsqrt	#int	#10	#10		#parameter name: latfsqrt <br/>type: int <br /> default value: 16<br /><br />Latency delay for FP square-root.																													#Processor parameters		#FPU square root latency
#repfsqrt	#int	#6	#6		#parameter name: repfsqrt <br/>type: int <br /> default value: 16<br /><br />Repeat delay for FP square-root.																													#Processor parameters		#FPU square root repeat delay
#maxstack	#int	#1024	#1024		#parameter name: maxstack <br/>type: int <br /> default value: 16<br /><br />This number specifies the maximum size of eac simulated precess stack, in KB.																							#Processor parameters		#Maximum stack size per process
#l1type		#list	#WT,WB	#WT		#parameter name: l1type <br/>type: int <br /> default value: 16<br /><br />This parameter specifies the L1 cache type. <br /><br />If "WT" is chosen, a write-through cache with n- write-allocate is used. <br /><br />If "WB" is chosen, a write-back cache with write alocate is used. With a write-through cache, the system will also have a coalescing write-buffer. <br /><br />(In either case, the secondary cache is write-back with write-allocate. )		#Cache hierarchy parameters	#L1 cache type
#linesize	#int	#64	#64		#parameter name: linesize <br/>type: int <br /> default value: 16<br /><br />The number given here specifies the cash-line size in bytes.			#Cache hierarchy parameters 	#Cache line size
#l1size		#int	#16	#16		#parameter name: l1size <br/>type: int <br /> default value: 16<br /><br />This number specifies the size of the L1 cache in KB.			#Cache hierarchy parameters		#L1 cache size (in KB)
#l1assoc	#int	#1	#1		#parameter name: l1assoc <br/>type: int <br /> default value: 16<br /><br />This number specifies the set associativity of the L1 cache. The cache uses an LRU-like replacement policy within each set (the policy uses RLU ages, but prefers to evict lines held in shared state rather than line held in exclusive  state, and unmodified line s rather than modified line.)			#Cache hierarchy parameters	#L1 set associativity
#l1ports	#int	#2	#2		#parameter name: l1ports <br/>type: int <br /> default value: 16<br /><br />Specifies the number of cache request ports at L1 cache.																	#Cache hierarchy parameters	#Number of L1 cache request ports
#l1taglatency	#int	#1	#1		#parameter name: l1taglatency <br/>type: int <br /> default value: 16<br /><br />Specifies the cache access latency at the L1 cache (for both tag and data access). (With the assmption of a 300 MHz processor, this represents a 3 ns on-chip SRAM)			#Cache hierarchy parameters	#L1 cache access latency
#l2size		#int	#64	#64		#parameter name: l2size <br/>type: int <br /> default value: 16<br /><br />This number specifies the size of the L2 cache in KB. 																	#Cache hierarchy parameters	#L2 cache size
#l2assoc	#int	#4	#4		#parameter name: l2assoc <br/>type: int <br /> default value: 16<br /><br />This number specifies the set associativity of the L2 cache. The cache uses an LRU-like replacement policy within each set.								#Cache hierarchy parameters	#L2 set associativity
#l2taglatency	#int	#3	#3		#parameter name: l2taglatency <br/>type: int <br /> default value: 16<br /><br />Specifies the access latency of the L2 cache tag array.																	#Cache hierarchy parameters	#L2 cache tag array access latency
#l2datalatency	#int	#5	#5		#parameter name: l2datalatency <br/>type: int <br /> default value: 16<br /><br />Specifies the access latency of the L2 cache data array.																	#Cache hierarchy parameters	#L2 cache data array access latency
#wrbbufextra	#int	#0	#0		#parameter name: wrbbufextra <br/>type: int <br /> default value: 16<br /><br />The L2 cache icludes a buffer for sending subset <br />enforcement messages to the L1 cache and write-backs to memory. <br />Write-backs remain in the buffer only until issuing to the bus, and subset enforcement messages remain only until issuing to the L1 cache. This buffer must contain at least one entry for each L2 MSHR, since each outbound request may result in a replacement upon reply. The number specified by wbrbufextra indicates the number of additional entries to provide for the write-back buffer in order to allow more outgoing requests while other write-backs still have not issued. 			#Cache hierarchy parameters	#Extra write-back buffer entries
#ccprot		#list	#mesi,msi	#mesi		#parameter name: ccprot <br/>type: int <br /> default value: 16<br /><br />The String given here specifies the cache-coherence protocol of the system; mesi and msi are acceptable values.										#Cache hierarchy parameters	#Cache coherence protocol
#wbufsize	#int	#8	#8		#parameter name: wbufsize <br/>type: int <br /> default value: 16<br /><br />If a write-through L1 cach is used, this parameter specifies the nmber of cache line in the coalescing write-buffer. With a write-back L1 cache this parameter is ignored. 		#Cache hierarchy parameters	#Write buffer size 
#mshrcoal	#int	#16	#16		#parameter name: mshrcoal <br/>type: int <br /> default value: 16<br /><br />This number specifies the maximum number of request that can coalesce into a chace MSHR or a write buffer line. (64 is the muximum allowable)						#Cache hierarchy parameters	#Limit on number of coalesced requests in an MSHR
#buswidth	#int	#32	#32		#parameter name: buswidth <br/>type: int <br /> default value: 16<br /><br />This number specifies the width of the bus, in bytes.					#Bus parameters		#Bus width
#buscycle	#int	#3	#3		#parameter name: buscycle <br/>type: int <br /> default value: 16<br /><br />The number listed here gives the bus cycle time in processor cycles.			#Bus parameters		#Bus cycle time
#busarbdelay	#int	#1	#1		#parameter name: busarbdelay <br/>type: int <br /> default value: 16<br /><br />This parameter gives the bus arbitration delay in processor cycles.			#Bus parameters		#Bus arbitration delay
#memorylatency	#int	#18	#18		#parameter name: memorylatency <br/>type: int <br /> default value: 16<br /><br />This number specifies the DRAM access latency in cycles. (Note that this is only the actual time at the DRAM, and does not include time on the bus, in the caches, or ata any other resource.) 60 ns with a 300MHz processor.										#Directory and memory parameters	#DRAM access latency
#dircycle	#int	#3	#3		#parameter name: dircycle <br/>type: int <br /> default value: 16<br /><br />This number gives the minimum directory access latency, which is the latency incurred by non-data responses to the directory. ( requests to the directory for data-carrying responses to the directory must access the DRAM and thus incur the latency specified by memorylatency.) 			#Directory and memory parameters	#Minimum directory access latency
#meminterleaving#int	#4	#4		#parameter name: meminterleaving <br/>type: int <br /> default value: 16<br /><br />This number specifies the degree of memory and directory interleaving at each node.																											#Directory and memory parameters	#Degree of dir/memory interleaving per node
#dirbufsize	#int	#64	#64		#parameter name: dirbufsize <br/>type: int <br /> default value: 16<br /><br />This number sets the maximum number of pending rquests at the directory at any time. If additional request are recieved, they are bounced back to the sender with retry request.																#Directory and memory parameters	#Dir pending request buffer size
#dirpacketcreate#int	#12	#12		#parameter name: dirpacketcreate <br/>type: int <br /> default value: 16<br /><br />Some transactions require the directory to send coherence requests to the other caches (such as invalidations or cache-to-cache tranfer requests). This number specifies the time ti produce the first such coherence request for a given transaction, in processor cycles.				#Directory and memory parameters	#Dir coherence packet creation time, initial
#dirpacketcreateaddtl	#int	#6	#6	#parameter name: dirpacketcreateaddtl <br/>type: int <br /> default value: 16<br /><br />This number specifies the additional delay in processor cycles for each subsequent coherence request for a given transaction (after the first one).																			#Directory and memory parameters	#Dir coherence packet creation time, subsequent
#flitsize	#int	#8	#8		#parameter name: flitsize <br/>type: int <br /> default value: 16<br /><br />This parameter specifies the number of bytes in each network frit, which is equivalent to the width of the network in bytes.																						#Interconnection network parameters	#Network flit size
#flitdelay	#int	#4	#4		#parameter name: flitdelay <br/>type: int <br /> default value: 16<br /><br />This parameter gives the latency for each flit to pass through a network switch, in processor cycles. (With a 300 MHz processor and default value at this parameter, a 13ns latency delay is indicated. ) 													#Interconnection network parameters	#Flit delay at network switches
#arbdelay	#int	#4	#4		#parameter name: arbdelay <br/>type: int <br /> default value: 16<br /><br />This parameter gives the delay invoked by arbitration at each network multiplexer for the head flit of any packet.																								#Interconnection network parameters	#Arbitration delay at network multiplexers
#pipelinedsw	#int	#2	#2		#parameter name: pipelinedsw <br/>type: int <br /> default value: 16<br /><br />This parameter allows the use of a pipelined network switches, in which the flit delay of multiple flits can be partially overlapped. With pipelined switches, the flit delay for each successive flit in a packet will begin pipelinedsw number of cycle after the start of the previous flit delay, If the number 0 or a number greater than the flit delay is specified here, the switches are not pipelined. 			#Interconnection network parameters	#Granularity of switch pipelining
#netbufsize	#int	#64	#64		#parameter name: netbufsize <br/>type: int <br /> default value: 16<br /><br />This parameter specifies the number of flits that can be bufferd in each network switch.																											#Interconnection network parameters	#Switch buffer size (in flits)
#netportsize	#int	#64	#64		#parameter name: netportsize <br/>type: int <br /> default value: 16<br /><br />This parameter specifies the network interface buffer, in packets.. Each node has 2 network interfaces, one for sending messages to the network, and one for recieving messages from the network. Each network interface has 2 ports queues connecting the network interface to the bus (one for requests  and one for replies). This parameter specifies the number of entries available in each port queue. This parameter is also used to specify the numbaer of internal buffer entries in each network interface for actually sending messages to the network or recieving messages from the network. Each network interface has 2 internal buffers: one for requests and one for replies. The total number of packets in these two internal buffers is set by the parameter netportsize, split evenly between requests and replies.  			#Interconnection network parameters	#Port buffer size (in packets)
#portszl1wbreq	#int	#2	#2		#parameter name: portszl1wbreq <br/>type: int <br /> default value: 16<br /><br />L1 -> Write buffer (data request)							#Queue sizes connecting various modules		#L1 to Write buffer
#portszwbl1rep	#int	#1	#1		#parameter name: portszwbl1rep <br/>type: int <br /> default value: 16<br /><br />Write buffer -> L1 (data reply)							#Queue sizes connecting various modules		#Write buffer to L1
#portszwbl2req	#int	#1	#1		#parameter name: portszwbl2req <br/>type: int <br /> default value: 16<br /><br />Write buffer -> L2 (data request)							#Queue sizes connecting various modules		#Write buffer to L2
#portszl2wbrep	#int	#1	#1		#parameter name: portszl2wbrep <br/>type: int <br /> default value: 16<br /><br />L2 -> Write buffer (data reply)							#Queue sizes connecting various modules		#L2 to Write buffer
#portszl1l2req	#int	#2	#2		#parameter name: portszl1l2req <br/>type: int <br /> default value: 16<br /><br />L1 -> L2 (data request)								#Queue sizes connecting various modules		#L1 to L2
#portszl2l1rep	#int	#1	#1		#parameter name: portszl2l1rep <br/>type: int <br /> default value: 16<br /><br />L2 -> L1 (data reply)								#Queue sizes connecting various modules		#L2 to L1
#portszl2l1cohe	#int	#1	#1		#parameter name: portszl2l1cohe <br/>type: int <br /> default value: 16<br /><br />L2 -> L1 (coherence request [including subset enforcement])			#Queue sizes connecting various modules		#L2 to L1
#portszl1l2cr	#int	#1	#1		#parameter name: portszl1l2cr <br/>type: int <br /> default value: 16<br /><br />L1 -> L2 (coherence reply)								#Queue sizes connecting various modules		#L1 to L2
#portszl2busreq	#int	#8	#8		#parameter name: portszl2busreq <br/>type: int <br /> default value: 16<br /><br />L2 -> bus (data request)								#Queue sizes connecting various modules		#L2 to Bus
#portszbusl2rep	#int	#2	#2		#parameter name: portszbusl2rep <br/>type: int <br /> default value: 16<br /><br />bus -> L2 (data reply)								#Queue sizes connecting various modules		#Bus to L2
#portszbusl2cohe#int	#2	#2		#parameter name: portszbusl2cohe <br/>type: int <br /> default value: 16<br /><br />bus -> L2 (coherence request)							#Queue sizes connecting various modules		#Bus to L2
#portszl2buscr	#int	#8	#8		#parameter name: portszl2buscr <br/>type: int <br /> default value: 16<br /><br />L2 -> bus (coherence reply, cache-to-cache data reply)				#Queue sizes connecting various modules		#L2 to Bus
#portszbusother	#int	#16	#16		#parameter name: portszbusother <br/>type: int <br /> default value: 16<br /><br />bus -> other modules 								#Queue sizes connecting various modules		#Bus to other modules (per port)
#portszdir	#int	#64	#64		#parameter name: portszdir <br/>type: int <br /> default value: 16<br /><br />Directory -> bus									#Queue sizes connecting various modules		#Directory to Bus (per port)